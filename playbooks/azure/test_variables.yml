# Copyright 2024 Cisco Systems, Inc. and its affiliates
# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)


# Note: These task verify variables for roles - but many of them already use some default values
# so users don't have to configure too many fields.

- name: Test provided configuration data. No cloud auth checks. No system changes.
  hosts: localhost
  vars_files:
    - ./pnp_credentials.yml
    - ./azure_sdwan_config.yml
  vars:
    required_variables:
      organization_name: "{{ organization_name | default() }}"
      az_location: "{{ az_location | default() }}"
      az_allowed_subnets: "{{ az_allowed_subnets | default() }}"
      az_manager_image_vhd_source: "{{ az_manager_image_vhd_source | default() }}"
      az_validator_vm_size: "{{ az_validator_vm_size | default() }}"
      az_controller_image_vhd_source: "{{ az_controller_image_vhd_source | default() }}"
      az_cedge_image_offer: "{{ az_cedge_image_offer | default() }}"
      az_cedge_image_publisher: "{{ az_cedge_image_publisher | default() }}"
      az_cedge_image_sku: "{{ az_cedge_image_sku | default() }}"
      az_cedge_image_version: "{{ az_cedge_image_version | default() }}"
      admin_password: "{{ admin_password | default() }}"
  tasks:
    - name: Assert that required variables are provided
      ansible.builtin.assert:
        that:
          - variable.value
          - variable.value is defined
          - variable.value is not none
          - variable.value != None
          - variable.value != "None"
          - variable.value != ""
          - variable.value | length > 0
        fail_msg: "Verification for variables failed: missing required variable: {{ variable.key }}"
        success_msg: "Required variable: {{ variable.key }} provided"
        quiet: true
      loop: "{{ required_variables | dict2items }}"
      loop_control:
        loop_var: variable
        label: "{{ variable.key }}"
      when: required_variables is defined

    - name: Sensitive data assertion `pnp_username` and `pnp_password`
      ansible.builtin.assert:
        that:
          - required_var
          - required_var is defined
          - required_var != None
          - required_var != "None"
          - required_var != ""
          - required_var | length > 0
        fail_msg: "Required variables: `pnp_username` and `pnp_password` variables are missing"
        quiet: true
      loop:
        - "{{ pnp_username }}"
        - "{{ pnp_password }}"
      loop_control:
        loop_var: required_var
      no_log: true
      register: pnp_vars
      ignore_errors: true  # ignore because we cannot log any message withing this task, instead we fail in next one

    - name: Assert that required `pnp_username` and `pnp_password` variables are provided
      ansible.builtin.fail:
        msg: "Required variables: `pnp_username` and `pnp_password` variables are missing"
      when: pnp_vars is defined and (pnp_vars.failed | default(False))
